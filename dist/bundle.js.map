{"version":3,"file":"bundle.js","mappings":";;;;;AAAA;AACA;AACA,4BAA4B,gBAAgB;AAC5C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,uBAAuB;AACpD;AACA;AACA;AACA,0BAA0B,+BAA+B;AACzD;AACA;AACA;AACA,oCAAoC,UAAU,eAAe,gCAAgC;AAC7F,IAAI;AACJ,sCAAsC,UAAU,eAAe,gCAAgC;AAC/F;AACA,EAAE;AACF,CAAC,E","sources":["webpack://qr-code-reader-chrome-extension/./service-worker.js"],"sourcesContent":["chrome.runtime.onInstalled.addListener(() => {\r\n\t// Set the initial state of the extension\r\n\tchrome.storage.local.set({ enabled: false });\r\n});\r\n\r\nchrome.action.onClicked.addListener((tab) => {\r\n\t// Retrieve the current state from storage\r\n\tchrome.storage.local.get('enabled', (result) => {\r\n\t\tconst isEnabled = result.enabled || false;\r\n\r\n\t\t// Toggle the state\r\n\t\tconst updatedState = !isEnabled;\r\n\r\n\t\t// Save the updated state to storage\r\n\t\tchrome.storage.local.set({ enabled: updatedState });\r\n\r\n\t\t// Set the appropriate icon based on the state\r\n\t\tconst iconPath = updatedState ? 'icon_enabled.png' : 'icon_disabled.png';\r\n\t\tchrome.action.setIcon({ path: iconPath, tabId: tab.id });\r\n\r\n\t\t// Execute or disable the content script based on the state\r\n\t\tif (updatedState) {\r\n\t\t\tchrome.scripting.executeScript({ target: { tabId: tab.id }, files: ['content-script.js'] });\r\n\t\t} else {\r\n\t\t\t// chrome.scripting.removeScript({ target: { tabId: tab.id }, files: ['content-script.js'] });\r\n\t\t}\r\n\t});\r\n});"],"names":[],"sourceRoot":""}